//@version=5
// ||###################################################################################||
// ||                                                                                   ||
// || 5 Smooth EMA                                                                      ||
// ||                                                                                   ||
// ||                                                                                   ||
// ||###################################################################################||

indicator(title="RSI Background Indicator", shorttitle="RSI Background Indicator", max_labels_count = 500, overlay=true)

//##################################################################################################
//Highlight background with transparent red and green to represent overbought and oversold
//##################################################################################################
//Plot the Relative Strength Index (RSI) when its over 70 and under 30
rsi_len = input.int(14, minval=1, title="RSI Length")
rsi_src = input(close, "RSI Source")
rsi_min = input.int(30, minval=1, title="RSI Minimum Threshold")
rsi_max = input.int(70, minval=1, title="RSI Maximum Threshold")

rsi = ta.rsi(rsi_src, rsi_len)
rsi_color = rsi > rsi_max ? color.new(color.red,80)  : rsi < rsi_min ? color.new(color.green, 80) : na
//rsi_color = rsi > rsi_max ? color.rgb(183, 28, 28)  : rsi < rsi_min ? color.rgb(0, 77, 64) : na

bgcolor(color=rsi_color, offset=0, editable=true, title="RSI")



//##########################
//Macd is less then Singal - Bearish position and sell


















// // indicator(title="Moving Average Convergence Divergence", shorttitle="MACD", timeframe="", timeframe_gaps=true)
// // Getting inputs
// fast_length = input(title="Fast Length", defval=12)
// slow_length = input(title="Slow Length", defval=26)
// src = input(title="Source", defval=close)
// signal_length = input.int(title="Signal Smoothing",  minval = 1, maxval = 50, defval = 9)
// sma_source = input.string(title="Oscillator MA Type",  defval="EMA", options=["SMA", "EMA"])
// sma_signal = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"])
// // Plot colors
// col_macd = input(#2962FF, "MACD Line  ", group="Color Settings", inline="MACD")
// col_signal = input(#FF6D00, "Signal Line  ", group="Color Settings", inline="Signal")
// col_grow_above = input(#26A69A, "Above   Grow", group="Histogram", inline="Above")
// col_fall_above = input(#B2DFDB, "Fall", group="Histogram", inline="Above")
// col_grow_below = input(#FFCDD2, "Below Grow", group="Histogram", inline="Below")
// col_fall_below = input(#FF5252, "Fall", group="Histogram", inline="Below")
// // Calculating
// fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
// slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
// macd = fast_ma - slow_ma
// signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
// hist = macd - signal

// label.new(bar_index, high, text="Hist: " + str.tostring(hist), color=color.blue, textcolor=color.black, size=size.normal, textalign=text.align_center, tooltip="Hist: " + str.tostring(hist),style=label.style_label_down)


// plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below)))
// plot(macd, title="MACD", color=col_macd)
// plot(signal, title="Signal", color=col_signal)
